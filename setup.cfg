# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = dstoolbox
version = 0.1.16
description = A collection of utility functions for data science applications
author = Tobias Schmidt
author-email = royalts@gmail.com
long-description = file: README.md
long-description-content-type = text/markdown; charset=UTF-8; variant=GFM
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
license = MIT
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    = src

# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    numpy
    pandas
    environs
python_requires = >=3.8

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install dstoolbox[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = dstoolbox.module:function
# For example:
# console_scripts =
#     fibonacci = dstoolbox.skeleton:run
# And any other entry points, for example:

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov dstoolbox --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
enable-extensions = G
select = A, B, B9, C, D, E, F, G, I, N, P, PD, S, W
# Some sane defaults for the code style checker flake8
max-line-length = 80
extend-ignore =
    E203, W503, # E203 and W503 have edge cases handled by black
    E501, # taken care of by bugbear
    N803, N806,
    D102, D104, D107,
    PD005, PD011 # BUG: https://github.com/deppen8/pandas-vet/issues/81
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    *.scraps.py
    [flake8]
max-complexity = 18
show-source = true
docstring-convention = numpy

[pydocstyle]
convention = numpy
ignore = D102, D104, D107

[pandas-vet]
ignore = PD005, PD011 # BUG: https://github.com/deppen8/pandas-vet/issues/81

[darglint]
strictness=short
docstring_style=numpy
